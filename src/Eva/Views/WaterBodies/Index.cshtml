@model PaginatedList<EVA.Models.WaterBody>

@{
    ViewData["Title"] = "Water Bodies";
}

<h2>Water Bodies</h2>

<p>
    <a asp-action="Create">Create New</a>

    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
<p>
    Find by Site: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
    <input type="submit" value="Search" class="btn btn-default" />
    <a asp-action="Index">Back to list</a>
</p>
    </div>
</form>

</p>
<table class="table">
    <thead>
        <tr>
            <th>

            </th>
            <th>
                
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.siteSortParm" asp-route-currentFilter="@ViewData["CurrentFilter"]">Site</a>
            </th>
            <th>
                Name
            </th>
            <th>
                

                <a asp-action="Index" asp-route-sortOrder="@ViewBag.PTSortParm" asp-route-currentFilter="@ViewData["CurrentFilter"]">Pool Type</a>
            </th>
            <th>
                
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.ConSortParm" asp-route-currentFilter="@ViewData["CurrentFilter"]">Construction</a>
            </th>
            <th>
                
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.AreaSortParm" asp-route-currentFilter="@ViewData["CurrentFilter"]">Area</a>
            </th>
            <th>
               

                <a asp-action="Index" asp-route-sortOrder="@ViewBag.VolSortParm" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Volume</a>
            </th>
           
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <a asp-action="Book" asp-route-id="@item.Site.SiteID">Book Job</a>
            </td>
            <td>
                <a asp-controller="Sites" asp-action="Details" asp-route-id="@item.SiteID">@Html.DisplayFor(modelItem => item.Site.SiteName)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WBName)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.PoolType.iPoolType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Construction.iConstruction)
            </td>
            <td>
                @Html.DisplayFor(modelItem=>item.PoolArea)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PoolVolume)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.WaterBodyID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.WaterBodyID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.WaterBodyID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex-1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled btn">
    Previous
</a>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex+1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled btn">
    Next
</a>